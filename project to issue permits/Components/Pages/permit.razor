@page "/permint/{IDunvircity}"
@inject NavigationManager Navm
@rendermode InteractiveServer
<!DOCTYPE html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- css-fill -->
    <link rel="stylesheet" href="/bootstrap/styleForPermitPage.css">
    <!-- google font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Serif:wght@100;300;600&display=swap" rel="stylesheet">
    <title>Document</title>
</head>
    <div class="continer">
        <div class="line">
            <p></p>
        </div>
        <img src="/bootstrap/user-face.jpeg" alt="" class="user-img">
        <img src="/bootstrap/barcode.jpeg" alt="" class="barcod">
        <div class="cont-pragrph">
            <div class="user-data">
            <p class="prgraph">الاسم : @Name</p>
            <p  class="prgraph">الرقم الجامعي : @IDunvircity</p>
            <p class="prgraph">الكلية : @collage </p>
            <p  class="prgraph"> نوع التصريح: @type</p>
            </div>
            <div class="car-Data">
            <p class="prgraph">نوع السيارة : @model</p>
            <p class="prgraph">لون السيارة : @color</p>
            <p class="prgraph">لوحة السيارة:</p>
            <div class="cont-seral-number">
                <p class="seral-number">@carID1</p>
                <p class="seral-number">@carID2</p>
                <p class="seral-number">@carID3</p>
                <p class="seral-number">@carID4</p>
                <p class="seral-number">@carID5</p>
                <p class="seral-number">@carID6</p>
                <p class="seral-number">@carID7</p>
            </div>
            </div>
        </div>
    </div>
@code {
    string Name = "hghg";
    string collage = "";
    string type = "";
    string model = "";
    string color = "";
    string carID1 = "";
    string carID2 = "";
    string carID3 = "";
    string carID4 = "";
    string carID5 = "";
    string carID6 = "";
    string carID7 = "";
    [Parameter]
    public string? IDunvircity { get; set; }

    private static string[] readData(string search, string fileData, int positipn)
    {
        string[] NotFound = { "Not Found" };
        try
        {
            string[] Lines = System.IO.File.ReadAllLines(@fileData);
            for (int i = 0; i < Lines.Length; i++)
            {
                string[] fields = Lines[i].Split(",");
                if (serchForMatches(search, fields, positipn))
                {
                    return fields;
                }
            }
            return NotFound;
        }
        catch (Exception ex)
        {
            return NotFound;
            throw new ApplicationException("there Are Erorr is : ", ex);
        }
    }
    private static bool serchForMatches(string search, string[] record, int position)
    {
        if (record[position].Equals(search))
        {
            return true;
        }
        return false;
    }
    void SomeStartupMethod()
    {
        int count = 0;
        foreach (string x in (readData(IDunvircity, "Data.txt", 0)))
        {
            Console.WriteLine(x);
            if (count == 2)
            {
                Name = x;
            }
            else if (count == 4)
            {
                collage = x;
            }
            else if (count == 5)
            {
                type = x;
            }
            else if (count == 6)
            {
                model = x;
            }
            else if (count == 7)
            {
                color = x;
            }
            else if (count == 8)
            {
                carID1 = x;
            }
            else if (count == 9)
            {
                carID2 = x;
            }
            else if (count == 10)
            {
                carID3 = x;
            }
            else if (count == 11)
            {
                carID4 = x;
            }
            else if (count == 12)
            {
                carID5 = x;
            }
            else if (count == 13)
            {
                carID6 = x;
            }
            else if (count == 14)
            {
                carID7 = x;
            }
            count++;
        }
    }

    Task SomeStartupTask()
    {
        // Do some task based work
        return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        SomeStartupMethod();
        await SomeStartupTask();
    }
}